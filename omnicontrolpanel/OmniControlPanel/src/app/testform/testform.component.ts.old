import { NgModule, Component, OnInit } from '@angular/core';
import { AuthService } from './../auth/auth.service';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule, HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';
import { User, articleResponse } from './testform.interface';
import { Http, Response } from "@angular/http";


@Component({
  selector: 'app-testform',
  templateUrl: './form.component.html',
  styleUrls: ['./testform.component.css'],
  providers: [Http]
})
@NgModule({
  imports: [
    BrowserModule,
    HttpClientModule,
  ]
})
export class TestFormComponent implements OnInit {
  user: FormGroup;
  results: string[];
  constructor(public auth: AuthService,
              private http: HttpClient) {}
  ngOnInit(): void {
    this.user = new FormGroup({
      name: new FormControl('', [Validators.required, Validators.minLength(2)]),
      account: new FormGroup({
        email: new FormControl('', Validators.required),
        confirm: new FormControl('', Validators.required)
      })
    });
    this.http.get<articleResponse>('http://localhost:8080/ArticleServices/getArticlePosts', { observe: 'response' })
      .subscribe(
        data => {
          this.results = data['results'];
        },
        (err: HttpErrorResponse) => {
          if (err.error instanceof Error) {
            console.log('An error occured:', err.error.message);
          } else { 
            console.log(`Backend returned error status ${err.status}, body was ${err.error}`);
          }
        }
    );
  }
  onSubmit({ value, valid }: {value: User, valid: boolean }) {
    console.log(value, valid);
  }
}
